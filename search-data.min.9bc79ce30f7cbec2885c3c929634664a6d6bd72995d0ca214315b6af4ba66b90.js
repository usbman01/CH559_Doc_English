(function(){const pages=[{"idx":0,"href":"/docs/1-overview/","title":"1. Overview","content":" 8-bit enhanced USB microcontroller CH559 1. Overview The CH559 chip is an enhanced E8051 core microcontroller compatible with the MCS51 instruction set. Its 79% of instructions are single-byte single-cycle instructions, and the average instruction speed is 8 to 15 times faster than the standard MCS51.\nThe CH559 supports up to 56MHz system clock speed, built-in 64K program memory Flash-ROM and 256-byte internal iRAM and 6K bytes of on-chip xRAM. Some xRAMs support DMA direct memory access.\nThe CH559 has built-in ADC analog-to-digital conversion, four groups of timers and PWM, dual asynchronous serial port, dual SPI, and other functional modules, as well as a built-in dual-port Root-HUB that supports USB-Host host mode and USB-Device device mode.\nThe following is an internal block diagram of the CH559 for reference only.\n"},{"idx":1,"href":"/docs/2-features/","title":"2. Features","content":" 8-bit enhanced USB microcontroller CH559 2. Features  Core: Enhanced E8051 core, compatible with MCS51 instruction set, 79% of instructions are single-byte single-cycle instructions, average command speed is 8~15 times faster than standard MCS51, special XRAM data fast copy instruction, double DPTR pointer.\n ROM: 64KB non-volatile memory Flash-ROM, support 100K erasing, can be used for program storage space; or can be divided into 60KB program storage area and 1KB data storage area and 3KB boot code BootLoader/ISP program area.\n RAM: 256 bytes internal iRAM, can be used for fast data temporary storage and stack; 6KB on-chip xRAM, can be used for large data temporary storage and DMA direct memory access; support for external expansion of 32KB external SRAM.\n USB: Embedded USB controller and dual USB transceiver, support USB-Host host mode and USB-Device device mode, support USB 2.0 full speed 12Mbps or low speed 1.5Mbps, USB host mode can manage two simultaneously through dual port Root-HUB USB devices. Supports up to 64 bytes of data packets, built-in FIFO, and support for DMA.\n Timer: 4 groups of timers, T0/T1/T2 are standard MCS51 timers; T2 is extended to support 2 signal captures; TMR3 has 8 levels of FIFOs, supports DMA, supports signal capture sampling and 16-bit PWM output.\n PWM: 3 sets of PWM outputs, PWM1/PWM2 are 2 8-bit PWM outputs; TMR3 supports 16-bit PWM outputs.\n UART: 2 sets of asynchronous serial port, UART0 is standard MCS51 serial port; UART1 is compatible with 16C550, built-in 8-stage FIFO, supports Modem signal, supports RS485 half-duplex mode, supports preset local address for automatic matching in multi-machine communication.\n SPI: 2 sets of SPI controllers with clock frequency up to half of the system\u0026rsquo;s main frequency Fsys, supporting serial data input and output simplex multiplexing. SPI0 has built-in FIFO and supports Master/Slave master-slave mode; SPI1 only supports host mode.\n ADC: 8-channel 10-bit or 11-bit A/D analog-to-digital converter with built-in 2-stage FIFO, support for DMA, support for up to 1MSPS sample rate, and support for two-channel automatic wheel test.\n LED-CTRL: LED screen control card data transmission interface, built-in 4-level FIFO, support DMA, support 1/2/4 data line interface, clock frequency up to half of the system frequency Fsys.\n XBUS: 8-bit parallel external bus, compatible with standard MCS51 bus, used to connect off-chip SRAM memory or other peripherals, support direct 15-bit address or ALE multiplexed lower 8-bit address, support 4 kinds of bus access speed.\n GPIO: Supports up to 45 GPIO pins (including XI/XO and RST and USB signal pins), 3.3V voltage output, and supports 5V withstand voltage input except P1.0~P1.7, XI, XO, RST.\n Interrupt: Supports 14 sets of interrupt sources, including 6 sets of interrupts compatible with standard MCS51 (INT0, T0, INT1, T1, UART0, T2), and extended 8 sets of interrupts (SPI0, TMR3, USB, ADC, UART1, PWM1) , GPIO, WDOG), where the GPIO interrupt can be selected from 7 pins.\n Watch-Dog: 8-bit preset watchdog timer WDOG, support for timed interrupts.\n Reset: Supports 4 kinds of reset signal sources, built-in power-on reset, support software reset and watchdog overflow reset, optional external input input reset.\n Clock: Built-in 12MHz clock source, external crystal can be supported by multiplexed GPIO pin, built-in PLL is used to generate USB clock and system frequency Fsys of required frequency.\n Power: Built-in 5V to 3.3V low dropout voltage regulator with internal working voltage of 3.3V and support for external 3.3V or 5V power input. Support low-power sleep, support USB, UART0, UART1, SPI0 and some GPIO external wake-up.\n The chip has a unique ID number built in, supporting ID numbers and verification.\n  "},{"idx":2,"href":"/docs/3-package/","title":"3. Package","content":" 8-bit enhanced USB microcontroller CH559 3. Package Package Description    Package Package width Pin spacing Package description Part No.     LQFP-48 7x7 mm 0.5mm / 19.7mil Standard LQFP48 footprint CH559L   SSOP-20 5.3mm 0.65mm / 25mil Ultra-small 20-footprint CH559T    "},{"idx":3,"href":"/docs/4-pin_descriptions/","title":"4. Pin descriptions","content":" 8-bit enhanced USB microcontroller CH559 4. Pin descriptions CH559L/T pin definitions.   Pin number Pin name (function after reset) Alternate functions Alternate functions description   SSOP-20 LQFP-48   1941VIN5V5The 5V external power input of the internal 5V-3.3V voltage regulator requires an external 0.1uF power supply decoupling capacitor.   2042VDD33VDD/VCCInternal voltage regulator output and internal 3.3V working power input. When the power supply voltage is less than 3.6V, connect VIN5 to input external power supply. When the power supply voltage is greater than 3.6V, connect 3.3uF power supply decoupling capacitor.   1818GNDVSSCommon ground terminal.   --40P0.0AD0/UDTRP0 port: The default is an 8-bit open-drain bidirectional port. You can enable the internal pull-up resistor to be turned into a quasi-bidirectional port by setting P0_PU.\nP0 temporarily switches to push-pull output as a bidirectional data bus AD0~AD7 when accessing the external bus, or outputs the lower 8 bits of the address as needed when accessing the external bus in multiplexed address mode.\nUDTR, URTS: Modem signal output of UART1.\nUCTS, UDSR, URI, UDCD: UART1 modem signal input.\nRXD_, TXD_: RXD, TXD pin mapping.\n   --39P0.1AD1/URTS   1738P0.2AD2/RXD_   1637P0.3AD3/TXD_   --36P0.4AD4/UCTS   --35P0.5AD5/UDSR   --34P0.6AD6/URI   --33P0.7AD7/UDCD   --43P1.0AIN0/T1/CAP1AIN0~AIN7: 8-channel ADC analog signal input.\nT2: External count input/clock output of timer/counter 2.\nT2EX: Timer/Counter 2 Reload/Capture Input.\nCAP1, CAP2: Capture input of timer/counter 2 1, 2.\nCAP3/PWM3: Timer/Event Counter 3 Capture Input/PWM Output.\nSCS, MOSI, MISO, SCK: SPI0 interface, SCS is the chip select input, MOSI is the master output/slave input, MISO is the master input/slave output, and SCK is the serial clock.\n   --44P1.1AIN1/T2EX/CAP2   145P1.2AIN2/PWM3/CAP3   --46P1.3AIN3   247P1.4AIN4/SCS   348P1.5AIN5/MOSI   41P1.6AIN6/MISO   52P1.7AIN7/SCK   --21P2.0A8When P2 accesses the external bus, it will automatically switch to the push-pull output temporarily, and output the upper 8 bits of the address A8~A15 as needed.\nMOSI1, MISO1, SCK1: SPI1 interface, MOSI1 is the master output, MISO1 is the master input, and SCK1 is the serial clock output.\nPWM1, PWM2: PWM1 output, PWM2 output.\nTNOW: UART1 is sending an output indication.\nT2EX_/CAP2_: T2EX/CAP2 pin mapping.\nRXD1, TXD1: UART1 serial data input, serial data output.\nDA7: Output address A7 when accessing the external bus in direct address mode.\n   --22P2.1MOSI1/A9   --23P2.2MISO1/A10   --24P2.3SCK1/A11   --25P2.4PWM1/A12   1126P2.5TNOW/PWM2/A13/T2EX_/CAP2_   1227P2.6RXD1/A14   1328P2.7TXD1/DA7/A15   --4P3.0RXDRXD, TXD: UART0 serial data input, serial data output.\nINT0, INT1: External interrupt 0, External interrupt 1 input.\nLED0, LED1, LEDC: LED serial data 0, 1, clock output.\n!A15: External bus address A15 Inverting output for chip select.\nT0, T1: Timer 0, Timer 1 External input.\nXCS0: External bus address 4000h~7FFFh Chip select output.\nDA6: Output address A6 when accessing the external bus in direct address mode.\nWR, RD: External bus write signal, read signal.\n   --7P3.1TXD   78P3.2LED0/INT0   --9P3.3LED1/!A15/INT1   810P3.4LEDC/XCS0/T0   --11P3.5DA6/T1   --12P3.6WR   --13P3.7RD   --20P4.0LED2/A0/RXD1_A0~A5: Outputs the lower 6-bit address A0~A5 when accessing the external bus in direct address mode.\nLED2, LED3: LED serial data 2, 3 output.\nRXD1_, TNOW_/TXD1_: RXD1, TNOW/TXD1 pin mapping.\nPWM3_/CAP3_: PWM3/CAP3 pin mapping.\nPWM1_, PWM2_: PWM1, PWM2 pin mapping.\nXI, XO: external crystal oscillator input, inverting output.\nSCS_, SCK_: SPI0 Chip Select SCS, SCK pin mapping.\n   --19P4.1A1   --15P4.2PWM3_/CAP3_/A2   --14P4.3PWM1_/A3   --6P4.4LED3/TNOW_/TXD1_/A4   --5P4.5PWM2_/A5   916P4.6XI/SCS_   1017P4.7X0/SCK_   1532P5.0DMDM, DP: USB host HUB0 or D-, D+ signal terminal of USB device.   1431P5.1DP   --30P5.4HM/ALE/XBXB, XA: B/inverting, A/in-phase signal terminal of iRS485.\nALE: Address latch signal output in multiplexed address mode.\n!A15: External bus address A15 Inverting output for chip select.\nHM, HP: The USB host extends the D- and D+ signals of HUB1.\n   --29P5.5HP/!A15/XA   63P5.7RSTExternal reset input with built-in pull-down resistor.   "},{"idx":4,"href":"/docs/5-sfr/","title":"5. Special function register SFR","content":" 5. Special function register SFR The following abbreviations may be used in describing the registers in this manual:\n   Abbreviation Description     RO Indicates access type: read only   WO Indicates the access type: write only, the value read is invalid   RW Indicates access type: readable and writable   h End with hexadecimal number   b Expressed as a binary number    5.1 SFR profile and address distribution The CH559 uses the special function registers SFR and xSFR to control, manage, and set the operating mode.\nThe SFR occupies the 80h-FFh address range of the internal data storage space and can only be accessed by direct address mode instructions.\nRegisters whose address is x0h or x8h are bit-addressable, which avoids changing the value of other bits when accessing a specific bit; registers other than a multiple of 8 can only be accessed byte by byte.\nSome SFRs can only write data in safe mode, but are read-only in non-secure mode, such as: GLOBAL_CFG, PLL_CFG, CLOCK_CFG, SLEEP_CTRL, WAKE_CTRL.\nSome SFRs have one or more aliases, such as: SPI0_CK_SE/SPI0_S_PRE, UDEV_CTRL/UHUB0_CTRL, UEP1_CTRL/UH_SETUP, UEP2_CTRL/UH_RX_CTRL, UEP2_T_LEN/UH_EP_PID, UEP3_CTRL/UH_TX_CTRL, UEP3_T_LEN/UH_TX_LEN, P5_PIN/P4_CFG.\nPartial addresses correspond to multiple independent SFRs, for example: TL2/T2CAP1L, TH2/T2CAP1H, SAFE_MOD/CHIP_ID, T3_COUNT_L/T3_CK_SE_L, T3_COUNT_H/T3_CK_SE_H, SER1_FIFO/SER1_RBR/SER1_THR/SER1_DLL, SER1_IER/SER1_DLM, SER1_IIR/SER1_FCR, SER1_ADDR/SER1_DIV, ROM_CTRL/ROM_STATUS.\nxSFR occupies the 2440h-298Fh address range of the xdata type of the external data storage space, or the 40H-8Fh address range of the pdata type. xSFR can only be accessed in bytes by indirect addressing via the MOVX instruction.\nThe default is based on the DPTR pointer; however, after bXIR_XSFR is set, the faster R0 or R1 can be used as a pdata type pointer to access xSFRs named pU* and pLED_*.\nSome xSFRs have one or more aliases, for example: UEP2_3_MOD/UH_EP_MOD, UEP2_DMA_H/UH_RX_DMA_H, UEP2_DMA_L/UH_RX_DMA_L, UEP2_DMA/UH_RX_DMA, UEP3_DMA_H/UH_TX_DMA_H, UEP3_DMA_L/UH_TX_DMA_L, UEP3_DMA/UH_TX_DMA.\nPartial addresses correspond to multiple independent xSFRs, for example: LED_DATA/LED_FIFO_CN.\nThe CH559 contains all the registers of the 8051 standard SFR, and other device control registers have been added. The specific SFR is shown in the table below.\nTable 5.1 Special Function Register Table\nRemarks: (1), Text in red means it can be addressed by bit; (2), the following is the corresponding description of the color box.\n  Color Description  Register address SPI0 related register ADC related register USB related register Timer/Counter 2 Related Registers Port setting related register SPI1 related register PWM1 and PWM2 related registers UART1 related register Timer/Counter 0 and 1 related registers Flash-ROM related register  5.2 SFR types and reset values   Function typeNameAddressDescriptionReset value  System settings registerBF0hB register0000 0000b ACCE0haccumulator0000 0000b PSWD0hProgram status register0000 0000b GLOBAL_CFGB1hGlobal configuration register (in the bootloader state)1110 0000b Global configuration register (in application state)1100 0000b CHIP_IDA1hChip ID (read only)0101 1001b SAFE_MODA1hSafe mode control register (write only)0000 0000b DPH83hData address pointer is 8 bits high0000 0000b DPL82hData address pointer is lower 8 bits0000 0000b DPTR82hDPL and DPH form a 16-bit SFR0000h SP81hStack pointer0000 0111b Clock, sleep, and\npower control registersWDOG_COUNTFFhWatchdog count register0000 0000b RESET_KEEPFEhReset holding register (in power-on reset state)0000 0000b WAKE_CTRLEBhSleep wake control register0000 0000b SLEEP_CTRLEAhSleep control register0000 0000b CLOCK_CFGB3hSystem clock configuration register1001 1000b PLL_CFGB2hPLL clock configuration register1101 1000b PCON87hPower control register (in power-on reset state)0001 0000b Interrupt control registerIP_EXE9hExtended interrupt priority control register0000 0000b IE_EXE8hExtended interrupt enable register0000 0000b GPIO_IECFhGPIO interrupt enable register0000 0000b IPB8hInterrupt priority control register0000 0000b IEA8hInterrupt enable register0000 0000b Flash-ROM registerROM_DATA_H8Fhflash-ROM data register high bytexxxx xxxxb ROM_DATA_L8EhFlash-ROM data register low bytexxxx xxxxb ROM_DATA8EhROM_DATA_L and ROM_DATA_H form a 16-bit SFRxxxxh ROM_STATUS86hflash-ROM status register (read only)1000 0000b ROM_CTRL86hflash-ROM control register (write only)0000 0000b ROM_ADDR_H85hflash-ROM address register high bytexxxx xxxxb ROM_ADDR_L84hFlash-ROM address register low bytexxxx xxxxb ROM_ADDR84hROM_ADDR_L and ROM_ADDR_H form a 16-bit SFRxxxxh Port setting registerXBUS_SPEEDFDhExternal bus speed configuration register1111 1111b XBUS_AUXFDhExternal bus auxiliary setting register0000 0000b PIN_FUNCCEhPin function select register0000 0000b P4_CFGC7hP4 port configuration register0000 0000b P5_INC7hP5 port input register (read only)0000 0000b PORT_CFGC6hPort configuration register0000 1111b P0_PUC5hP0 port pull-up enable register (En_P0_Pullup=0)0000 0000b P0 port pull-up enable register (En_P0_Pullup=1)1111 1111b P0_DIRC4hP0 port direction control register0000 0000b P4_PUC3hP4 port pull-up enable register1111 1111b P4_DIRC2hP4 port direction control register0000 0000b P4_INC1hP4 port input register (read only)1111 1111b P4_OUTC0hP4 port output register0000 0000b P3_PUBFhP3 port direction control register1111 1111b P3_DIRBEhP3 port pull-up enable register0000 0000b P2_PUBDhP2 port pull-up enable register1111 1111b P2_DIRBChP2 port direction control register0000 0000b P1_PUBBhP1 port pull-up enable register1111 1111b P1_DIRBAhP1 port direction control register0000 0000b P1_IEB9hP1 port input enable register1111 1111b P3B0hP3 port input and output registers1111 1111b P2A0hP2 port input and output registers1111 1111b P190hP1 port input and output registers1111 1111b P080hP0 port input and output registers1111 1111b Timer/Counter 0 and 1 registersTH18DhTimer1 count high bytexxxx xxxxb TH08ChTimer0 count high bytexxxx xxxxb TL18Bh3Timer1 count low bytexxxx xxxxb TL08AhTimer0 count low bytexxxx xxxxb TMOD89hTimer0/1 mode register0000 0000b TCON88hTimer0/1 Control Register0000 0000b UART0 registerSBUF99hUART0 data registerxxxx xxxxb SCON98hUART0 control register0000 0000b Timer/Counter 2 RegistersTH2CDhTimer2 counter high byte0000 0000b TL2CChTimer2 counter low byte0000 0000b T2COUNTCChTL2 and TH2 form a 16-bit SFR0000h T2CAP1HCDhTimer2 capture 1 data high byte (read only)xxxx xxxxb T2CAP1LCChTimer2 capture 1 data low byte (read only)xxxx xxxxb T2CAP1CChT2CAP1L and T2CAP1H form a 16-bit SFRxxxxh RCAP2HCBhCount reload/capture 2 data register high byte0000 0000b RCAP2LCAhCount reload/capture 2 data register low byte0000 0000b RCAP2CAhRCAP2L and RCAP2H form a 16-bit SFR0000h T2MODC9hTimer2 mode register0000 0000b T2CONC8hTimer2 Control Register0000 0000b Timer/counter 3 registersT3_FIFO_HAFhTimer3 FIFO high bytexxxx xxxxb T3_FIFO_LAEhTimer3 FIFO low bytexxxx xxxxb T3_FIFOAEhT3_FIFO_L and T3_FIFO_H form a 16-bit SFRxxxxh T3_DMA_AHADhDMA current buffer address high byte0000 xxxxb T3_DMA_ALAChDMA current buffer address low bytexxxx xxx0b T3_DMAAChT3_DMA_AL and T3_DMA_AH form a 16-bit SFR0xxxh T3_DMA_CNABhDMA residual count register0000 0000b T3_CTRLAAhTimer3 Control Register0000 0010b T3_STATA9hTimer3 Status Register0000 0000b T3_END_HA7hTimer3 counts the final high bytexxxx xxxxb T3_END_LA6hTimer3 counts the final low bytexxxx xxxxb T3_ENDA6hT3_END_L and T3_END_H form a 16-bit SFRxxxxh T3_COUNT_HA5hTimer3 current count high byte (read only)0000 0000b T3_COUNT_LA4hTimer3 current count low byte (read only)0000 0000b T3_COUNTA4hT3_COUNT_L and T3_COUNT_H form a 16-bit SFR0000h T3_CK_SE_HA5hTimer3 clock divider setting high byte0000 0000b T3_CK_SE_LA4hTimer3 clock divider sets the low byte0010 0000b T3_CK_SEA4hT3_CK_SE_L and T3_CK_SE_H form a 16-bit SFR0020h T3_SETUPA3hTimer3 setup register0000 0100b PWM1 and PWM2 registersPWM_CYCLE9FhPWM cycle period registerxxxx xxxxb PWM_CK_SE9EhPWM clock divider setting register0000 0000b PWM_CTRL9DhPWM control register0000 0010b PWM_DATA9ChPWM1 data registerxxxx xxxxb PWM_DATA29BhPWM2 data registerxxxx xxxxb SPI0 registerSPI0_SETUPFChSPI0 setting register0000 0000b SPI0_S_PREFBhSPI0 slave mode preset data register0010 0000b SPI0_CK_SEFBhSPI0 clock divider setting register0010 0000b SPI0_CTRLFAhSPI0 control register0000 0010b SPI0_DATAF9hSPI0 data transceiver registerxxxx xxxxb SPI0_STATF8hSPI0 status register0000 1000b SPI1 registerSPI1_CK_SEB7hSPI1 clock divider setting register0010 0000b SPI1_CTRLB6hSPI1 control register0000 0010b SPI1_DATAB5hSPI1 data transceiver registerxxxx xxxxb SPI1_STATB4hSPI1 status register0000 1000b UART1 registerSER1_DLL9AhUART1 Baud Rate Divisor Latch Low Bytexxxx xxxxb SER1_FIFO9AhUART1 data FIFO read and write registersxxxx xxxxb SER1_DIV97hUART1 prescaler divisor register0xxx xxxxb SER1_ADDR97hUART1 bus address preload register1111 1111b SER1_MSR96hUART1 Modem MODEM Status Register (Read Only)1111 0000b SER1_LSR95hUART1 line status register (read only)0110 0000b SER1_MCR94hUART1 Modem MODEM Control Register0000 0000b SER1_LCR93hUART1 line control register0000 0000b SER1_IIR92hUART1 Interrupt Identification Register (Read Only)0000 0001b SER1_FCR92hFIFO control register (write only)0000 0000b SER1_DLM91hUART1 baud rate divisor latch high byte1000 0000b SER1_IER91hUART1 interrupt enable register0000 0000b ADC registerADC_EX_SWF7hADC Extended Analog Switch Control Register0000 0000b ADC_SETUPF6hADC setup register0000 1000b ADC_FIFO_HF5hFIFO high byte of ADC (read only)0000 0xxxb ADC_FIFO_LF4hADC FIFO low byte (read only)xxxx xxxxb ADC_FIFOF4hADC_FIFO_L and ADC_FIFO_H form a 16-bit SFR0xxxh ADC_CHANNF3hADC channel select register0000 0000b ADC_CTRLF2hADC control register0000 0000b ADC_STATF1hADC status register0000 0100b ADC_CK_SEEFhADC clock divider setting register0001 0000b ADC_DMA_CNEEhDMA residual count register0000 0000b ADC_DMA_AHEDhDMA current buffer address high byte0000 xxxxb ADC_DMA_ALEChDMA current buffer address low bytexxxx xxx0b ADC_DMAEChADC_DMA_AL and ADC_DMA_AH form a 16-bit SFR0xxxh USB registerUSB_DMA_AHE7hDMA current buffer address high byte (read only)000x xxxxb USB_DMA_ALE6hDMA current buffer address low byte (read only)xxxx xxx0b USB_DMAE6hUSB_DMA_AL and USB_DMA_AH form a 16-bit SFRxxxxh UHUB1_CTRLE5hUSB host HUB1 port control register1100 x000b UHUB0_CTRLE4hUSB host HUB0 port control register0100 x000b UDEV_CTRLE4hUSB Device Port Control Register0100 x000b USB_DEV_ADE3hUSB Device Address Register0000 0000b USB_CTRLE2hUSB Control Register0000 0110b USB_INT_ENE1hUSB Interrupt Enable Register0000 0000b UEP4_T_LENDFhEndpoint 4 Transmit Length Register0xxx xxxxb UEP4_CTRLDEhEndpoint 4 Control Register0000 0000b UEP0_T_LENDDhEndpoint 0 Transmit Length Register0xxx xxxxb UEP0_CTRLDChEndpoint 0 Control Register0000 0000b USB_HUB_STDBhSB Host HUB Port Status Register (Read Only)0000 0000b USB_MIS_STDAhSB Miscellaneous Status Register (Read Only)xx10 1000b USB_INT_STD9hUSB Interrupt Status Register (Read Only)00xx xxxxb USB_INT_FGD8hUSB Interrupt Flag Register0010 0000b UEP3_T_LEND7hEndpoint 3 Transmit Length Register0xxx xxxxb UH_TX_LEND7hUSB host send length register0xxx xxxxb UEP3_CTRLD6hEndpoint 3 Control Register0000 0000b UH_TX_CTRLD6hUSB host transmit endpoint control register0000 0000b UEP2_T_LEND5hEndpoint 2 Transmit Length Register0000 0000b UH_EP_PIDD5hUSB Host Token Setting Register0000 0000b UEP2_CTRLD4hEndpoint 2 Control Register0000 0000b UH_RX_CTRLD4hUSB host receive endpoint control register0000 0000b UEP1_T_LEND3hEndpoint 1 Transmit Length Register0xxx xxxxb UEP1_CTRLD2hEndpoint 1 Control Register0000 0000b UH_SETUPD2hUSB Host Auxiliary Settings Register0000 0000b USB_RX_LEND1hUSB Receive Length Register (Read Only)0xxx xxxxb USB xSFR registerUEP4_1_MOD2446hEndpoint 1, 4 mode control register0000 0000b UEP2_3_MOD2447hEndpoint 2, 3 Mode Control Register0000 0000b UH_EP_MOD2447hUSB Host Endpoint Mode Control Register0000 0000b UEP0_DMA_H2448hEndpoints 0 and 4 Buffer Start Address High Bytes000x xxxxb UEP0_DMA_L2449hEndpoints 0 and 4 Buffer Start Address Low Bytexxxx xxx0b UEP0_DMA2448hUEP0_DMA_L and UEP0_DMA_H form a 16-bit SFRxxxxh UEP1_DMA_H244AhEndpoint 1 Buffer Start Address High Byte000x xxxxb UEP1_DMA_L244BhEndpoint 1 Buffer Start Address Low Bytexxxx xxx0b UEP1_DMA244AhUEP1_DMA_L and UEP1_DMA_H form 16-bit SFRxxxxh UEP2_DMA_H244ChEndpoint 2 Buffer start address high byte000x xxxxb UEP2_DMA_L244DhEndpoint 2 Buffer Start Address Low Bytexxxx xxx0b UEP2_DMA244ChUEP2_DMA_L and UEP2_DMA_H form 16-bit SFRxxxxh UH_RX_DMA_H244ChUSB host receive buffer start address high byte000x xxxxb UH_RX_DMA_L244DhUSB host receive buffer start address low bytexxxx xxx0b UH_RX_DMA244ChUH_RX_DMA_L and UH_RX_DMA_H form 16-bit SFRxxxxh UEP3_DMA_H244EhEndpoint 3 Buffer start address high byte000x xxxxb UEP3_DMA_L244FhEndpoint 3 Buffer Start Address Low Bytexxxx xxx0b UEP3_DMA244EhUEP3_DMA_L and UEP3_DMA_H form 16-bit SFRxxxxh UH_TX_DMA_H244EhUSB host transmit buffer start address high byte000x xxxxb UH_TX_DMA_L244FhUSB host send buffer start address low bytexxxx xxx0b UH_TX_DMA244EhUH_TX_DMA_L and UH_TX_DMA_H form a 16-bit SFRxxxxh pU*254*hAfter bXIR_XSFR is set to 1, this name is used to address the above xSFR with pdata type, which is faster than xdata type addressing. LED Control Card xSFR RegisterLED_STAT2880hLED Status Register010x 0000b LED_CTRL2881hLED Control Register0000 0010b LED_FIFO_CN2882hFIFO Count Status Register (Read Only)0000 0000b LED_DATA2882hLED data register (write only)xxxx xxxxb LED_CK_SE2883hLED Clock Divider Setting Register0001 0000b LED_DMA_AH2884hDMA current buffer address high byte000x xxxxb LED_DMA_AL2885hDMA Current buffer address low bytexxxx xxx0b LED_DMA2884hLED_DMA_AL and LED_DMA_AH Compose 16-bit SFRxxxxh LED_DMA_CN2886hLED DMA Remaining Count Registerxxxx xxxxb LED_DMA_XH2888hDMA Current auxiliary buffer address high byte000x xxxxb LED_DMA_XL2889hDMA Current auxiliary buffer address low bytexxxx xxx0b LED_DMA_X2888hLED_DMA_XL and LED_DMA_XH form a 16-bit SFRxxxxh pLED_*298*hAfter bXIR_XSFR is set to 1, this name is used to address the above xSFR with pdata type, which is faster than xdata type addressing.  5.3 General purpose 8051 register  Table 5.3.1 General 8051 Register List\n   NameAddressDescriptionReset value  BF0hB register00h A, ACCE0haccumulator00h PSWD0hprogram status register00h GLOBAL_CFGB1hGlobal configuration register (in the bootloader state)E0h Global configuration register (in application state)C0h CHIP_IDA1hChip ID Identifier (Read Only)59h SAFE_MODA1hSafety Mode Control Register (Write Only)00h PCON87hpower control register (in power-on reset state)10h DPH83hdata address pointer high 8 bit00h DPL82hdata address pointer low 8 bits00h DPTR82hDPL and DPH form 16-bit SFR0000h SP81hstack pointer07h  B register (B):   BitNameAccessDescriptionReset value  [7:0]BRWArithmetic operation registers, mainly used for multiplication and division, bit-addressable00h  A accumulator (A, ACC):   BitNameAccessDescriptionReset value  [7:0]A/ACCRWArithmetic accumulator, bit addressable00h  Program Status Register (PSW):   BitNameAccessDescriptionReset value  7CYRWCarry flag: Used to record the carry or borrow of the most significant bit when performing arithmetic and logic operations.\nWhen the 8-bit addition is performed, the most significant bit is set, otherwise it is cleared.\nwhen 8-bit subtraction is performed If the borrow is borrowed, the bit is set, otherwise it is cleared.\nThe logic instruction can make the bit bit or clear.\n0 6ACRWAuxiliary carry flag: When recording and subtracting, the lower 4 bits have a carry or borrow from the upper 4 bits, AC is set, otherwise cleared.0 5F0RWUniversal flag bit addressable by bit 0: User can define it himself, can be cleared or set by software0 4RS1RWRegister bank select bit high0 3RS0RWRegister bank select bit low0 2OVRWOverflow flag: When adding or subtracting, the operation result exceeds 8 binary digits, then OV is set to 1, the flag overflows, otherwise cleared 00 1F1RWUniversal flag bit addressable by bit 1: User can define it, can be cleared or set by software0 0PR0Parity flag: Record the parity of 1 in accumulator A after the execution of the instruction. P1 for odd number 1 and P for even number 10  The state of the processor is stored in the status register PSW and the PSW supports bitwise addressing. The status word includes the carry flag, the auxiliary carry flag for BCD code processing, the parity flag, the overflow flag, and RS0 and RS1 for the working register bank selection. The area in which the working register set is located can be accessed either directly or indirectly.\n Table 5.3.2 RS1 and RS0 Working Register Group Selection Table\n   RS1RS0Working register set  00Group 0 (00h-07h) 01Group 1 (08h-0Fh) 10Group 2 (10h-17h) 11Group 3 (18h-1Fh)   Table 5.3.3 Operations that affect the flag bit (X indicates that the flag bit is related to the operation result)\n   OperationCYOVAC  ADDXXX ADDCXXX SUBBXXX MUL0X DIV0X DA AX RRC AX RLC AX CJNEX SETB C1 CLR C0 CPL CX MOV C, bitX ANL C, bitX ANL C,/bitX ORL C, bitX ORL C,/bitX  Data Address Pointer (DPTR):   BitNameAccessDescriptionReset value  [7:0]DPLRWData pointer low byte00h [7:0]DPHRWData pointer high byte00h  DPL and DPH form a 16-bit data pointer DPTR for accessing xSFR, xBUS, xRAM data memory or program memory. The actual DPTR corresponds to the physical 16-bit data pointers of DPTR0 and DPTR1, which are dynamically selected by DPS in XBUS_AUX.\nStack pointer (SP):   BitNameAccessDescriptionReset value  [7:0]SPRWStack pointer, mainly used for program calls and interrupt calls, and data in and out of the stack07h  Stack specific functions: protect endpoints and protect the site, and manage them on a first-come, first-out basis. When the stack is pushed, the SP pointer is automatically incremented by 1, and the data or breakpoint information is saved. When the stack is taken, the SP pointer points to the data unit, and the SP pointer is automatically decremented by 1. The initial value of the SP after reset is 07h, and the corresponding default stack storage starts at 08h.\n5.4 Special registers Global configuration register (GLOBAL_CFG), writable only in safe mode:\n  BitNameAccessDescriptionReset value  [7:6]ReservedROFixed value 1111b 5bBOOT_LOADROThe Boot loader status bit is used to distinguish between the ISP bootloader status or the application state: set when the power is turned on, and cleared to 0 when the software is reset. For chips with an ISP bootloader, this bit is 1 indicates that the software has never been reset, usually the ISP bootloader state that was run after power-up. this bit is 0 indicating that the software has been reset, usually the application state\n1 4bSW_RESETRWSoftware reset control bit: Set to 1 to cause software reset, hardware auto-zero0 3bCODE_WERWFlash-ROM write enable bit: This bit is 0 for write protection; 1 for Flash-ROM writable erasable0 2bDATA_WERWDataFlash area write enable bit of Flash-ROM: This bit is 0 for write protection; 1 is for DataFlash area to be erasable and erasable0 1bXIR_XSFRRWMOVX_@R0/R1 instruction access range control bits:\nThis bit is 0 to allow access to all xdata regions xRAM/xBUS/xSFR.\nThis bit is 1 for access to xSFR and cannot access xRAM/xBUS\n0 0bWDOG_ENRWWatchdog reset enable bit: This bit is 0. The watchdog is only used as a timer. this bit is 1 to allow a watchdog reset when the timer overflows.0  Chip ID (CHIP_ID):   BitNameAccessDescriptionReset value  [7:0]CHIP_IDROFixed value 59h for identification chip59h  Safe Mode Control Register (SAFE_MOD):   BitNameAccessDescriptionReset value  [7:0]SAFE_MODWOUsed to enter or terminate safe mode00h  Some SFRs can only write data in safe mode, and are always read-only in non-secure mode. Steps to enter safe mode:\n write 55h to the register. then write AAh to the register. After that, about 13 to 23 system main frequency cycles are in safe mode, and one or more security class SFRs or ordinary SFRs can be rewritten during the validity period. automatically terminate the safe mode after the above validity period. Or write any value to this register to terminate the safe mode early.  "},{"idx":5,"href":"/docs/6-memory_structure/","title":"6. Memory structure","content":" 6. Memory structure 6.1 Memory space CH559 addressing space is divided into program storage space, internal data storage space, and external data storage space.\n Figure 6.1 Memory Structure\n 6.2 Program Storage Space The program memory space is 64KB. As shown in Figure 6.1, it is all used for flash-ROM, including Code Flash area for saving instruction code, Data Flash area for saving non-volatile data, and Configuration Information area for configuration information.\nThe Data Flash address range is F000h to F3FFH. It supports single-byte read (8-bit), double-byte write (16-bit), and block erase (1K byte) operations. The data remains unchanged after the chip is powered off. Make Code Flash.\nCode Flash includes application code for low address areas and bootstrap code for high address areas. You can also combine these two areas and Data Flash to hold a single application code.\nConfiguration Information Configuration Information A total of 16 bits of data, set by the programmer as needed, refer to Table 6.1.\n Table 6.2 Description of flash-ROM configuration information\n   BitNameDescriptionReset value  15Code_ProtectCode and data protection mode in flash-ROM:\n0-Prohibit the programmer to read, the program is confidential; 1-Allow readout0/1 14No_Boot_LoadEnable BootLoader boot code startup mode:\n0-started from the 0000h address application.\n1-start from the bootloader of the F400h address1 13En_Long_ResetEnable additional delay reset during power-on reset:\n0-standard short reset; 1-wide reset, additional 87mS reset time0 12XT_OSC_StrongSelect the external drive capability of the crystal oscillator: 0-standard; 1-enhanced0 11En_P5.7_RESETEnable P5.7 as a manual reset input pin: 0-disable; 1-enable RST1 10En_P0_PullupEnable internal pull-up resistor for port P0 during system reset:\n0-Pull-up resistor disabled after reset.\n1-Pull-up resistor enabled after reset1 9Must_1(Automatically set to 1 by the programmer as needed)1 8Must_0(automatically set to 0 by the programmer as needed)0 [7:0]All_1(Automatically set to FFh by the programmer as needed)FFh  6.3 Data Storage Space The internal data storage space is 256 bytes in total. As shown in Figure 6.1, it is used for SFR and iRAM. iRAM is used for stack and fast data temporary storage. It can be subdivided into working registers R0-R7, bit variables bdata, bytes. Variable data, idata, etc.\nThe external data storage space is 64KB in total, as shown in Figure 6.1, and partially used for 6KB on-chip expansion of xRAM and xSFR. Except for the two reserved areas, the remaining 4000h to FFFFh address range is the external bus area.\n6.4 flash-ROM register  Table 6.4 List of flash-ROM operation registers\n   NameAddressDescriptionReset value  ROM_DATA_H8Fhflash-ROM data register high bytexxh ROM_DATA_L8Ehflash-ROM data register low bytexxh ROM_DATA8EhROM_DATA_L and ROM_DATA_H form a 16-bit SFRxxxxh ROM_STATUS86hflash-ROM status register (read only)80h ROM_CTRL86hflash-ROM control register (write only)00h ROM_ADDR_H85hflash-ROM address register high bytexxh ROM_ADDR_L84hflash-ROM address register low bytexxh ROM_ADDR84hROM_ADDR_L and ROM_ADDR_H form a 16-bit SFRxxxxh  flash-ROM address register (ROM_ADDR):   BitNameAccessDescriptionReset value  [7:0]ROM_ADDR_HRWFlash-ROM address high bytexxh [7:0]ROM_ADDR_LRWFlash-ROM address low byte, only supports even addressxxh  flash-ROM data register (ROM_DATA):   BitNameAccessDescriptionReset value  [7:0]ROM_DATA_HRWflash-ROM data to be written high bytexxh [7:0]ROM_DATA_LRWflash-ROM data to be written low bytexxh  flash-ROM control register (ROM_CTRL):   BitNameAccessDescriptionReset value  [7:0]ROM_CTRLW0flash-ROM control register00h  flash-ROM status register (ROM_STATUS):   BitNameAccessDescriptionReset value  7ReservedR0Reserved1 6bROM_ADDR_OKR0flash-ROM operation address valid status bit:\nIf the bit is 0, the parameter is invalid; 1 means the address is valid.0 [5:2]ReservedR0Reserved0000b 1bROM_CMD_ERRR0flash-ROM operation command error status bit:\nA bit of 0 indicates that the command is valid. A value of 1 indicates an unknown command.0 0bROM_CMD_TOUTR0flash-ROM operation result status bit:\nA bit of 0 indicates that the operation was successful. A value of 1 indicates that the operation timed out.0  6.5 flash-ROM operation steps  Erase the flash-ROM and change all the data bits in the target block to 1:\n enable the security mode, SAFE_MOD = 55h; SAFE_MOD = 0AAh; set the global configuration register GLOBAL_CFG to enable write enable (bCODE_WE or bDATA_WE corresponds to code or data); set the address register ROM_ADDR, write 16-bit target address, the actual only high 6 bits are valid; Set the operation control register ROM_CTRL to 0A6h to perform the block erase operation, and the program will automatically pause during the operation; After the operation is completed, the program resumes operation. At this time, the status register ROM_STATUS can be queried to check the operation status; if multiple blocks are to be erased, the steps (3), (4), and (5) are repeated; enter safe mode again, SAFE_MOD = 55h; SAFE_MOD = 0AAh; Set the global configuration register GLOBAL_CFG to enable write protection (bCODE_WE=0, bDATA_WE=0).  Write flash-ROM to change part of the data bits in the target double byte from 1 to 0:\n enable the security mode, SAFE_MOD = 55h; SAFE_MOD = 0AAh; set the global configuration register GLOBAL_CFG to enable write enable (bCODE_WE or bDATA_WE corresponds to code or data); set the address register ROM_ADDR, write 16-bit target address, the actual only 15 high; set the data register ROM_DATA, write 16 bits of data to be written, steps (3), (4) can be reversed; Set the operation control register ROM_CTRL to 09Ah to perform the write operation, and the program will automatically suspend the operation during the operation; After the operation is completed, the program resumes operation. At this time, the status register ROM_STATUS can be queried to check the operation status; if multiple data is to be written, the steps (3), (4), (5), and (6) are repeated; enter safe mode again, SAFE_MOD = 55h; SAFE_MOD = 0AAh; Set the global configuration register GLOBAL_CFG to enable write protection (bCODE_WE=0, bDATA_WE=0).  read flash-ROM:\n Read the code or data of the target address directly using the MOVC instruction or by a pointer to the program memory space.   6.6 On-board programming and ISP downloads When the configuration information Code_Protect=1, the code and data in the CH559 chip flash-ROM can be read and written by the external programmer through the synchronous serial interface; when the configuration information Code_Protect=0, the code and data in the flash-ROM are protected. Can not be read, but can be erased, and re-powered after erasing to release code protection.\nWhen the CH559 chip is pre-installed with the BootLoader bootloader, the CH559 can support multiple ISP download methods such as USB or asynchronous serial port to load the application; but without the bootloader, the CH559 can only be written to the bootloader by an external dedicated programmer. Or an application. In order to support on-board programming, five connection pins between CH559 and the programmer need to be reserved in the circuit.\n Table 6.6.1 Connection Pins to the Programmer\n   PinGPIOPin description  RSTP5.7Reset control pin in programming state, high level allows entry into programming state SCSP1.4Chip select input pin in programming state, default high level, active low SCKP1.7Clock input pin in programming state MOSIP1.5Data input pin in programming state MISOP1.6Data output pin in programming state  6.7 chip unique ID number Each microcontroller is shipped with a unique ID number, the chip identification number. The ID data and its checksum are 8 bytes in total, and are stored in the area where the offset address of the dedicated read-only memory is 20h. It can be obtained by reading Code Flash similarly during the period when E_DIS is 1 to close the global interrupt. Please refer to the C language example program GETID.C for operation.\n Table 6.7.1 Chip ID Address Table\n   Offset addressID data description  20h, 21hID first word data, followed by the lowest byte and the next lowest byte of the ID number 22h, 23hID second word data, followed by the next highest byte of the ID number, high byte 24h, 25hID last word data, followed by the next highest byte and highest byte of the 48-bit ID number 26h, 27h16-bit cumulative sum of ID first word, second word, last word data, used for ID verification  The ID number can be used with the download tool to encrypt the target program. For general applications, just use the first 32 digits of the ID number.\n"},{"idx":6,"href":"/docs/7-pm_sleep_reset/","title":"7. Power management","content":" 7. Power management, sleep and reset 7.1 External power input The CH559 chip has an internal working voltage of 3.3V, and the input/output voltage of the I/O pin is 3.3V. The I/O pins except P1.0~P1.7, XI, XO, and RST can withstand 5V voltage input. The CH559 chip has a 5V to 3.3V low dropout voltage regulator that supports an external 3.3V or 5V supply voltage input. The two supply voltage input modes refer to the table below.\n  External supply voltageVIN5 pin voltage: external voltage 3.3V~5VVDD33 pin voltage: internal voltage 3.3V  3.3V includes less than 3.6VInput external 3.3V voltage to voltage regulator, must be grounded to not less than 0.1uF decoupling capacitorInput external 3.3V as internal working power supply, must be grounded to ground not less than 0.1uF decoupling capacitor 5V includes greater than 3.6VInput external 5V voltage to voltage regulator, must be grounded to not less than 0.1uF decoupling capacitorInternal voltage regulator 3.3V output and 3.3V internal working power input, must be grounded to not less than 3.3uF decoupling capacitor  After the power is turned on or the system is reset, the CH559 is running by default. When some function modules are not needed, the clocks of these modules can be turned off to reduce power consumption. When the CH559 does not need to run at all, the PD in the PCON can be set to sleep. In the sleep state, external wake-up can be selected via USB, UART0, UART1, SPI0 and some GPIOs.\n7.2 Power and Sleep Control Registers  Table 7.2.1 List of Power and Sleep Control Registers\n   NameAddressDescriptionReset value  WDOG_COUNTFFhWatchdog Count Register00h RESET_KEEPFEhreset holding register00h WAKE_CTRLEBhSleep Wake Control Register00h SLEEP_CTRLEAhSleep control register00h PCON87hPower Control Register10h  Watchdog Count Register (WDOG_COUNT):   BitNameAccessDescriptionReset value  [7:0]WDOG_COUNTRWThe current count of the watchdog is 0FFh. It overflows when it is 00h. When it overflows, it automatically sets the interrupt flag bWDOG_IF_TO to 100h  Reset holding register (RESET_KEEP):   BitNameAccessDescriptionReset value  [7:0]RESET_KEEPRWReset the holding register, the value can be modified manually, except for the power-on reset to clear it, any other reset does not affect the value00h  Sleep wake control register (WAKE_CTRL), which can be written only in safe mode:   BitNameAccessDescriptionReset value  7bWAK_BY_USBRWUSB event wake-up enable, this bit is 0, no wake-up is allowed0 6bWAK_RXD1_LORWUART1 receives an input low wake-up enable. This bit is 0 to disable wake-up.\nSelect XA/XB differential input in iRS485 mode, select RXD1 or RXD1_ pin according to bIER_PIN_MOD1=1/0 in non-iRS485 mode0 5bWAK_P1_5_LORWP1.5 low wake enable, 0 disable wakeup0 4bWAK_P1_4_LORWP1.4 Low wake enable, 0 disable wakeup0 3bWAK_P0_3_LORWP0.3 Low wake enable, 0 disable wakeup0 2bWAK_CAP3_LORWTimer3 captures the input low wake enable, and 0 disables wakeup.\nSelect CAP3 or CAP3_ pin according to bTMR3_PIN_X=0/10 1bWAK_P3_2E_3LRWP3.2 Edge change and P3.3 low wake enable, 0 disable wakeup0 0bWAK_RXD0_LORWUART0 receives input low wake enable, 0 disables wakeup.\nSelect RXD0 or RXD0_ pin according to bUART0_PIN_X=0/10  Sleep Control Register (SLEEP_CTRL), which can be written only in Safe Mode:   BitNameAccessDescriptionReset value  7bSLP_OFF_USBRWUSB clock off control, this bit is 1 Off clock0 6bSLP_OFF_ADCRWADC clock off control, this bit is 1 Off clock0 5bSLP_OFF_UART1RWUAR1 clock off control, this bit is 1 off clock0 4bSLP_OFF_P1S1RWPWM1 and SPI1 clock off control, this bit is 1 OFF clock0 3bSLP_OFF_SPI0RWSPI0 clock off control, this bit is 1 off clock0 2bSLP_OFF_TMR3RWTimer3 clock off control, this bit is 1 off clock0 1bSLP_OFF_LEDRWLED-CTRL Clock off control, this bit is 1 Off clock0 0bSLP_OFF_XRAMRWxRAM clock off control, this bit is 1 off clock0  Power Control Register (PCON):   BitNameAccessDescriptionReset value  7SMODRWWhen using Timer 1 to generate UART0 baud rate, select the communication baud rate of UART0 mode 1, 2, 3: 0-slow mode; 1-fast mode0 6reservedROreserved0 5bRST_FLAG1R0chip last reset flag high0 4bRST_FLAG0R0chip last reset flag low1 3GF1RWuniversal flag 1: User can define it by itself, can be cleared or set by software.0 2GF0RWgeneral flag 0: user can define it himself, can be cleared or set by software0 1PDRWsleep mode enable, set to sleep after 1 wake-up hardware automatically cleared0 0reservedR0reserved0   Table 7.2.2 Description of the chip's last reset flag\n   bRST_FLAG1bRST_FLAG0Reset flag description  00Software reset, source: bSW_RESET=1 and (bBOOT_LOAD=0 or bWDOG_EN=1) 01Power-on reset, source: VDD33 pin voltage is lower than detection level 10Watchdog reset, source: bWDOG_EN=1 and watchdog timeout 11External pin is manually reset, source: En_P5.7_RESET=1 and P5.7 input high  7.3 Reset Control The CH559 has four reset sources: power-on reset, external reset, software reset, watchdog reset, and the latter three are hot resets.\n7.3.1 Power-on reset Power-on reset POR is generated by the on-chip voltage detection circuit. The POR circuit continuously monitors the supply voltage of the VDD33 pin. Below the detection level, Vpot generates a power-on reset, and the hardware automatically delays Tpor to maintain the reset state. After the delay expires, CH559 runs. Only the power-on reset causes the CH559 to reload the configuration information and clear RESET_KEEP. Other thermal resets do not affect.\n7.3.2 External reset An external reset is generated by a high level applied to the RST pin. The reset process is triggered when the configuration information En_P5.7_RESET is 1 and the high level on the RST pin lasts longer than Trst. When the external high level signal is cancelled, the hardware automatically delays Trdl to maintain the reset state. After the delay expires, CH559 starts from the 0 address.\n7.3.3 Software Reset The CH559 supports an internal software reset to actively reset the CPU state and re-run without external intervention. Set bSW_RESET in the global configuration register GLOBAL_CFG to 1, software reset, and automatically delay Trdl to maintain the reset state. After the delay expires, CH559 starts from 0 address, and bSW_RESET bit is automatically cleared by hardware.\nWhen bSW_RESET is set, if bBOOT_LOAD=0 or bWDOG_EN=1, bRST_FLAG1/0 will be indicated as a software reset after reset; when bSW_RESET is set to 1, if bBOOT_LOAD=1 and bWDOG_EN=0, then bRST_FLAG1/0 will not generate new The reset flag, but keeps the previous reset flag unchanged.\nFor a chip with an ISP boot program, after the power-on reset, run the boot program, which resets the chip to the application state according to the software reset. This software reset only causes bBOOT_LOAD to be cleared, and does not affect the state of bRST_FLAG1/0. (Because bBOOT_LOAD=1 before reset), when switching to the application state, bRST_FLAG1/0 still indicates the power-on reset state.\n7.3.4 Watchdog Reset The watchdog reset is generated when the watchdog timer times out. The watchdog timer is an 8-bit counter that counts the clock frequency of the system\u0026rsquo;s main frequency, Fsys/262144. When the 0FFh is turned to 00h, an overflow signal is generated.\nThe watchdog timer overflow signal will trigger the interrupt flag bWDOG_IF_TO to be 1, which is automatically cleared when the WDOG_COUNT is reloaded or when the corresponding interrupt service routine is entered.\nDifferent timing periods Twdc are achieved by writing different count initial values to WDOG_COUNT. At 12MHz, the watchdog timing period Twdc at 00h is about 5.9 seconds and about 2.8 seconds at 80h.\nIf bWDOG_EN = 1 when the watchdog timer overflows, a watchdog reset is generated, and Trdl is automatically delayed to maintain the reset state. After the delay is over, CH559 starts from the 0 address.\nTo avoid being reset by the watchdog when bWDOG_EN=1, WDOG_COUNT must be reset in time to avoid overflow.\n"},{"idx":7,"href":"/docs/8-system_clock/","title":"8. System Clock","content":" 8. System Clock 8.1 Clock Block Diagram  Figure 8.1.1 Clock system and structure\n The internal clock or external clock is selected as the original clock Fosc, and then the PLL is multiplied to generate the Fpll high-frequency clock. Finally, two sets of frequency converters are used to obtain the system clock Fsys and the clock of the USB module Fusb4x.\nThe system clock Fsys is provided to each module of the CH559 directly or after clock gating. Each module does not need to work at the same time. In order to reduce power consumption, the clock of modules that do not need to work can be disabled by setting the sleep control register.\n8.2 Register description  Table 8.2.1 Clock control register list\n   NameAddressDescriptionReset value  CLOCK_CFGB3hSystem clock configuration register98h PLL_CFGB2hPLL clock configuration registerD8h  System clock configuration register (CLOCK_CFG), writable only in safe mode:   BitNameAccessDescriptionReset value  7bOSC_EN_INTRWInternal clock oscillator enable, this bit is 1 to enable the internal clock oscillator and select the internal clock; this bit is 0 to disable the internal clock oscillator and select an external crystal oscillator1 6bOSC_EN_XTRWExternal crystal oscillator is enabled. If this bit is 1, the P4.6 / P4.7 pins are used as XI / XO and the oscillator is enabled. An external quartz crystal or ceramic oscillator is required between XI and XO; this bit is 0. Off External oscillator0 5bWDOG_IF_TOR0Watchdog timer interrupt flag bit. When this bit is 1, it indicates that there is an interrupt, which is triggered by the timer overflow signal. When this bit is 0, it indicates that there is no interrupt. This bit is automatically cleared when the watchdog count register WDOG_COUNT is reloaded or after entering the corresponding interrupt service routine0 [4:0]MASK_SYS_CK_DIVRWSystem clock division factor, when the value is 00000b, it means 100000b11000b  PLL clock configuration register (PLL_CFG), writable only in safe mode:   BitNameAccessDescriptionReset value  [7:5]MASK_USB_4X_DIVRWUSB clock division factor, when the value is 000b, it means 1000b110b [4:0]MASK_PLL_MULTRWPLL reference clock multiplier11000b  8.3 Clock configuration The CH559 chip uses the internal clock by default after power-on. The internal clock frequency is 12MHz. The internal clock or external crystal oscillator clock can be selected by CLOCK_CFG. If the external crystal oscillator is turned off, the XI and XO pins can be used as P4.6 and P4.7 ordinary I / O ports.\nIf an external crystal oscillator is used to provide the clock, then the crystal should be connected between the XI and XO pins, and the oscillating capacitor should be connected to the XI and XO pins respectively to GND; if the clock signal is input directly from the outside, Pin input, XO pin floating.\n Original clock frequency Fosc = bOSC_EN_INT? 12MHz: Fxt PLL frequency Fpll = Fosc * (PLL_CFG \u0026amp; MASK_PLL_MULT) USB clock division factor Kusb = (PLL_CFG \u0026amp; MASK_USB_4X_DIV) \u0026gt;\u0026gt; 5 USB clock frequency Fusb4x = Fpll / (Kusb? Kusb: 8) System clock division factor Ksys = CLOCK_CFG \u0026amp; MASK_SYS_CK_DIV System frequency Fsys = Fpll / (Ksys? Ksys: 32) After reset, Fosc = 12MHz, Fpll = 288MHz, Fusb4x = 48MHz, Fsys = 12MHz.  To switch to an external crystal oscillator to provide the clock:  Enter safe mode, step one SAFE_MOD = 55h; step two SAFE_MOD = AAh. Set \u0026ldquo;bOSC_EN_XT\u0026rdquo; in CLOCK_CFG by \u0026ldquo;bit-or\u0026rdquo; operation, other bits remain unchanged, enable crystal oscillator. Delay of several milliseconds, usually 5mS ~ 10mS, waiting for the crystal oscillator to work stably. Enter the safe mode again, step one SAFE_MOD = 55h; step two SAFE_MOD = AAh. Clear the bOSC_EN_INT in CLOCK_CFG to 0 with the \u0026ldquo;bit and\u0026rdquo; operation, the other bits remain unchanged, and switch to the external clock. Close the safe mode, and write any value to SAFE_MOD to terminate the safe mode in advance.  The steps to modify the system clock are as follows:  Calculate the new values of PLL_CFG and CLOCK_CFG in advance to avoid the calculation process too long beyond the validity period of the safe mode. Enter the safe mode, step one SAFE_MOD = 55h; step two SAFE_MOD = AAh. Write new value to PLL_CFG. Write a new value to CLOCK_CFG. Close the safe mode, and write any value to SAFE_MOD to terminate the safe mode in advance.  Remarks:  PLL frequency Fpll is recommended not to exceed the frequency range of 24MHz ~ 350MHz. Prioritize the use of a lower system clock frequency Fsys, thereby reducing system dynamic power consumption and widening the operating temperature range. If the USB module is used, Fusb4x must be adjusted to 48MHz. Switching the external crystal and modifying the main frequency of the system are two independent operations. If both are required at the same time, it is recommended to divide into two cases:  if the external crystal frequency does not exceed 13MHz, then switch to the external crystal first, and then modify the system main frequency. If the external crystal frequency is greater than 13MHz, first reduce the PLL reference clock multiplication factor in the PLL_CFG register to avoid the PLL frequency Fpll overflow, then switch to the external crystal, and finally modify the system main frequency, or you can also modify the PLL_CFG At the same time modify the system clock.   "},{"idx":8,"href":"/docs/9-interrupt/","title":"9. Interrupt","content":" 9. Interrupt The CH559 chip supports 14 sets of interrupt signal sources, including 6 sets of interrupts compatible with the standard MCS51: INT0, T0, INT1, T1, UART0, T2, and extended 8 sets of interrupts: SPI0, TMR3, USB, ADC, UART1, PWM1 GPIO, WDOG, among which GPIO interrupt can be selected from 7 I/O pins.\n9.1 Register description  Table 9.1.1 Interrupt vector table\n   Interrupt SourceEntry AddressInterrupt numberDescriptionDefault priority  INT_NO_INT00x00030External interrupt 0 or LED control card interrupt:\nWhen bLED_OUT_EN = 0 is external interrupt 0;\nWhen bLED_OUT_EN = 1 is LED control card interrupt\nHigh priority\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\n\u0026darr;\nLow priority INT_NO_TMR00x000B1Timer 0 interrupt INT_NO_INT10x00132External interrupt 1 INT_NO_TMR10x001B3Timer 1 interrupt INT_NO_UART00x00234UART0 interrupt INT_NO_TMR20x002B5Timer 2 interrupt INT_NO_SPI00x00336SPI0 interrupt INT_NO_TMR30x003B7Timer 3 interrupt INT_NO_USB0x00438USB interrupt INT_NO_ADC0x004B9ADC interrupt INT_NO_UART10x005310UART1 interrupt INT_NO_PWM10x005B11PWM1 interrupt INT_NO_GPIO0x006312GPIO interrupt INT_NO_WDOG0x006B13Watchdog timer interrupt   Table 9.1.2 Interrupt related register list\n   NameAddressDescriptionReset value  IP_EXE9hExtended interrupt priority control register00h IE_EXE8hExtended interrupt enable register00h GPIO_IECFhGPIO interrupt enable register00h IPB8hInterrupt Priority Control Register00h IEA8hinterrupt enable register00h  Interrupt Enable Register (IE):   BitNameAccessDescriptionReset value  7EARWGlobal interrupt enable control bit, this bit is 1 and E_DIS is 0 to enable interrupts. this bit is 0 to mask all interrupt requests0 6E_DISRWGlobal interrupt disable control bit, this bit is 1 to mask all interrupt requests. this bit is 0 and EA is 1 to enable interrupts. This bit is typically used to temporarily disable interrupts during flash-ROM operations0 5ET2RWTimer 2 interrupt enable bit, this bit is 1 to enable T2 interrupt. it is 0 to mask0 4ESRWAsynchronous serial port 0 interrupt enable bit, this bit is 1 to enable UART0 interrupt. masked to 00 3ET1RWTimer 1 interrupt enable bit. This bit is 1 to enable the T1 interrupt. it is masked to 0.0 2EX1RWExternal interrupt 1 enable bit, this bit is 1 to enable the INT1 interrupt. masked to 00 1ET0RWTimer 0 interrupt enable bit, this bit is 1 to enable the T0 interrupt. masked to 00 0EX0RWExternal interrupt 0 and LED control card interrupt enable bit, this bit is 1 to enable INT0 / LED interrupt, selected by bLED_OUT_EN. masked to 00  Extended interrupt enable register (IE_EX):   BitNameAccessDescriptionReset value  7IE_WDOGRWWatchdog timer interrupt enable bit, this bit is 1 to enable WDOG interrupt; 0 to mask0 6IE_GPIORWGPIO interrupt enable bit, this bit is 1 to enable interrupts enabled in GPIO_IE; 0 to mask all interrupts in GPIO_IE0 5IE_PWM1RWPWM1 interrupt enable bit. This bit is 1 to enable PWM1 interrupt; 0 to mask 00 4IE_UART1RWasynchronous serial port 1 interrupt enable bit, this bit is 1 to enable UART1 interrupt; 0 to mask0 3IE_ADCRWADC analog-to-digital conversion interrupt enable bit, this bit is 1 to enable ADC interrupt; 0 to mask0 2IE_USBRWUSB interrupt enable bit, this bit is 1 to enable USB interrupt; 0 to mask0 1IE_TMR3RWTimer 3 interrupt enable bit, this bit is 1 to enable Timer3 interrupt; 0 to mask0 0IE_SPI0RWSPI0 interrupt enable bit, this bit is 1 to enable SPI0 interrupt; 0 to mask0  GPIO interrupt enable register (GPIO_IE):   BitNameAccessDescriptionReset value  7bIE_IO_EDGERWGPIO edge interrupt mode enable:\n This bit is 0 to select the level interrupt mode.If the GPIO pin input valid level, bIO_INT_ACT is 1 and the interrupt is always requested.When the GPIO input invalid level, bIO_INT_ACT is 0 and the interrupt request is canceled.\n This bit is 1 to select the edge interrupt mode. When a valid edge is input to the GPIO pin, the interrupt flag bIO_INT_ACT is generated and an interrupt is requested. This interrupt flag cannot be cleared by software. It can only be reset or in level interrupt mode or enter the corresponding interrupt service routine Is automatically cleared\n0 6bIE_RXD1_LORWThis bit is 1 to enable UART1 receive pin interrupt (level mode is active low, edge mode falling edge is active). this bit is 0 to disable. Select XA/XB differential input in iRS485 mode, select RXD1 or RXD1_ pin according to bIER_PIN_MOD1 = 1/0 in non-iRS485 mode0 5bIE_P5_5_HIRWThis bit is 1 to enable the P5.5 interrupt (level mode is active high and edge mode is active on rising edge); this bit is 0 to disable0 4bIE_P1_4_LORWThis bit is 1 to enable the P1.4 interrupt (level mode is active low, edge mode is active on falling edge); this bit is 0 to disable0 3bIE_P0_3_LORWThis bit is 1 to enable the P0.3 interrupt (active in low level in level mode and valid in falling edge in edge mode); this bit is 0 to disable0 2bIE_P5_7_HIRWThis bit is 1 to enable the P5.7 interrupt (level mode is active high and edge mode is active on rising edge); this bit is 0 to disable0 1bIE_P4_1_LORWThis bit is 1 to enable the P4.1 interrupt (active in low level in level mode and valid in falling edge in edge mode); this bit is 0 to disable0 0bIE_RXD0_LORWThis bit is 1 to enable the UART0 receive pin interrupt (level mode is active low, edge mode is active falling edge); this bit is 0 to disable. Select RXD0 or RXD0_ pin according to bUART0_PIN_X = 0/10  Interrupt Priority Control Register (IP):   BitNameAccessDescriptionReset value  7PH_FLAGR0High priority interrupt executing flag0 6PL_FLAGR0Low Priority Interrupt Execution Flag0 5PT2RWTimer 2 interrupt priority control bit0 4PSRWUART0 interrupt priority control bit0 3PT1RWTimer 1 interrupt priority control bit0 2PX1RWInterrupt priority control bit for external interrupt 10 1PT0RWtimer 0 interrupt priority control bit0 0PX0RWExternal Interrupt 0 and Interrupt Priority Control Bit for LED Control Card Interrupt0  Extended interrupt priority control register (IP_EX):   BitNameAccessDescriptionReset value  7bIP_LEVELR0Current interrupt nesting level flag bit. If this bit is 0, it means no interrupt or nested level 2 interrupt.If this bit is 1, it means current nested level 1 interrupt.0 6bIP_GPIORWGPIO interrupt priority control bit0 5bIP_PWM1RWPWM1 interrupt priority control bit0 4bIP_UART1RWUART1 interrupt priority control bit0 3bIP_ADCRWADC interrupt priority control bit0 2bIP_USBRWUSB interrupt priority control bit0 1bIP_TMR3RWTimer3 interrupt priority control bit0 0bIP_SPI0RWSPI0 interrupt priority control bit0  The IP and IP_EX registers are used to set the interrupt priority. If a bit is set to 1, the corresponding interrupt source is set to a high priority. If a bit is cleared to 0, the corresponding interrupt source is set to a low priority . For the same level interrupt source, the system has a default priority order. The default priority order is shown in Table 9.1.1. Its PH_FLAG and PL_FLAG combination indicates the priority of the current interrupt.\n Table 9.1.3 Current interrupt priority status indication\n   PH_FLAGPL_FLAGCurrent interrupt priority status  00No interruption currently 01Low priority interrupt is currently executing 10High priority interrupt is currently executing 11Unexpected state, unknown error  "},{"idx":9,"href":"/categories/","title":"Categories","content":""},{"idx":10,"href":"/","title":"CH559_Doc_English","content":" English Docs for CH559 Microcontroller. "},{"idx":11,"href":"/docs/","title":"Docs","content":""},{"idx":12,"href":"/tags/","title":"Tags","content":""}];window.bookSearch={pages:pages,idx:lunr(function(){this.ref("idx");this.field("title");this.field("content");pages.forEach(this.add,this);}),}})();